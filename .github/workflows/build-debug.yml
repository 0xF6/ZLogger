name: Build-Debug

on: [push, pull_request]

jobs:
  build-dotnet:
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      NUGET_XMLDOC_MODE: skip
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.101

      # build CommandTools first (using dotnet run command in ZLogger.csproj)
      - run: dotnet build -c Debug ./tools/CommandTools/CommandTools.csproj
      - run: dotnet build -c Debug
      - run: dotnet test -c Debug --no-build ./tests/ZLogger.Tests/ZLogger.Tests.csproj

  build-unity:
    strategy:
      matrix:
        unity: ['2018.3.12f1', '2018.4.21f1'] # , '2019.3.9f1-linux-il2cpp', '2020.1.0b5-linux-il2cpp']
        include:
          - unity: 2018.3.12f1
            license: UNITY_2018
          - unity: 2018.4.21f1
            license: UNITY_2018
          - unity: 2019.3.9f1-linux-il2cpp
            license: UNITY_2019
          - unity: 2020.1.0b5-linux-il2cpp
            license: UNITY_2020
    runs-on: ubuntu-latest
    container:
      # https://hub.docker.com/r/gableroux/unity3d/tags
      image: gableroux/unity3d:${{ matrix.unity }}
    steps:
    - run: apt update && apt install git -y
    - uses: actions/checkout@v2
    # create unity activation file
    - run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -logFile -createManualActivationFile || exit 0
    - name: show activation file in output, if fail to activate unity, use this key and activate from https://license.unity3d.com/manual and set .ulf to secrets.
      run: cat Unity_v${{ matrix.unity }}.alf
    # activate Unity from manual license file(ulf)
    - run: echo ${{ secrets[matrix.license] }} >> .Unity.ulf
    - run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -manualLicenseFile .Unity.ulf || exit 0

    # Execute scripts/Export Package
    - name: Export unitypackage
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath . -executeMethod PackageExporter.Export
      working-directory: src/ZLogger.Unity

    # Store artifacts.      
    - uses: actions/upload-artifact@v1
      with:
        name: ZLogger.Unity.unitypackage
        path: ./src/ZLogger.Unity/ZLogger.Unity.unitypackage